########################################################
# Copyright 2019-2020 program was created VMware, Inc. #
# SPDX-License-Identifier: Apache-2.0                  #
########################################################

{{ if .Values.modules.egg.include }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: egg-config
  labels:
    fateMoudle: egg
    name: {{ .Values.partyName | quote  }}
    partyId: {{ .Values.partyId | quote  }}
    owner: kubefate
    cluster: fate
data:
  egg.properties: |
    party.id={{ .Values.partyId }}
    service.port=7888
    eggroll.computing.engine.names=processor
    eggroll.computing.processor.bootstrap.script=/data/projects/fate/eggroll/egg/conf/processor-starter.sh
    eggroll.computing.processor.start.port=50000
    eggroll.computing.processor.venv=/data/projects/python/venv
    eggroll.computing.processor.engine-path=/data/projects/fate/eggroll/python/eggroll/computing/processor.py
    eggroll.computing.processor.data-dir=/data/projects/fate/data-dir
    eggroll.computing.processor.logs-dir=/data/projects/fate/eggroll/python/eggroll/logs/processor
    eggroll.computing.processor.session.max.count={{ .Values.modules.egg.processorSessionMaxCount }}
    eggroll.computing.processor.python-path=/data/projects/fate/python:/data/projects/fate/eggroll/python
  processor-starter.sh: |
    #!/bin/bash
    
    ONE_ARG_LIST=(
        "venv"
        "python-path"
        "engine-path"
        "port"
        "data-dir"
        "logs-dir"
        "node-manager"
        "engine-addr"
    )
    
    opts=$(getopt \
        --longoptions "$(printf "%s:," "${ONE_ARG_LIST[@]}")" \
        --name "$(basename "$0")" \
        --options "" \
        -- "$@"
    )
    
    while [[ $# -gt 0 ]]; do
       case "$1" in
            --venv)
                venv=$2
                shift 2
                ;;
            --python-path)
                python_path=$2
                shift 2
                ;;
            --engine-path)
                engine_path=$2
                shift 2
                ;;
            --port)
                port=$2
                shift 2
                ;;
            --data-dir)
                data_dir=$2
                shift 2
                ;;
            --logs-dir)
                logs_dir=$2
                shift 2
                ;;
            --node-manager)
                node_manager=$2
                shift 2
                ;;
            --engine-addr)
                engine_addr=$2
                shift 2
                ;;
            *)
                break
                ;;
        esac
    done
    
    source ${venv}/bin/activate
    export PYTHONPATH=$PYTHONPATH:${python_path}
    PYTHON=${venv}/bin/python
    cmd="python ${engine_path} -p ${port} -d ${data_dir} -m ${node_manager} -a $(hostname -I | awk '{print $1}')"
    
    mkdir -p ${logs_dir}
    ${cmd} >> ${logs_dir}/processor-${port}.log 2>&1
---
{{- $root := . -}}
{{- range .Values.eggList }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .egg }}
  labels:
    fateMoudle: {{ .egg | quote  }}
    name: {{ $root.Values.partyName | quote  }}
    partyId: {{ $root.Values.partyId | quote  }}
    owner: kubefate
    cluster: fate
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      fateMoudle: {{ .egg | quote  }}
      name: {{ $root.Values.partyName | quote  }}
      partyId: {{ $root.Values.partyId | quote  }}
  template:
    metadata:
      labels:
        fateMoudle: {{ .egg | quote  }}
        name: {{ $root.Values.partyName | quote  }}
        partyId: {{ $root.Values.partyId | quote  }}
        owner: kubefate
        cluster: fate
    spec:
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - {{ .egg }}
      containers:
        - env:
          - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
            value: cpp 
          - name: LD_LIBRARY_PATH
            value: $LD_LIBRARY_PATH:/usr/local/lib:/data/projects/fate/eggroll/storage-service-cxx/third_party/lib
          - name: PYTHONPATH
            value: /data/projects/fate/eggroll/python
          - name: GLOG_log_dir
            value: /data/projects/fate/eggroll/storage-service-cxx/logs
          image: {{ $root.Values.image.registry }}/egg:{{ $root.Values.image.tag }}
          imagePullPolicy: {{ $root.Values.image.pullPolicy }}
          name: {{ .egg }}
          ports:
            - containerPort: 7888
            - containerPort: 7778
          volumeMounts:
            - mountPath: /data/projects/fate/eggroll/egg/conf/egg.properties
              name: egg-confs
              subPath: egg.properties
            - mountPath: /data/projects/fate/eggroll/egg/conf/processor-starter.sh
              name: egg-confs
              subPath: processor-starter.sh
            - mountPath: /data/projects/fate/eggroll/python/eggroll/conf/server_conf.json
              name: python-confs
              subPath: server_conf.json
            {{- if and $root.Values.nfspath ( $root.Values.nfsserver ) }}
            - mountPath: /data/projects/fate/data-dir
              subPath: {{ .egg }}-data-dir-{{ $root.Values.partyId }}
              name: modules-data-persistent-storage
            {{- end }}
      {{ if .value}}
      nodeSelector:
        {{ .nodeLabel }}: {{ .value }}
      {{ end }}
      restartPolicy: Always
      volumes:
        - name: egg-confs
          configMap:
            name: egg-config
        - name: python-confs
          configMap:
            name: python-config
        {{- if and $root.Values.nfspath ( $root.Values.nfsserver ) }}
        - name: modules-data-persistent-storage
          hostPath: 
            path: /data/projects/fate/data-dir
            type: DirectoryOrCreate
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    fateMoudle: {{ .egg | quote  }}
    name: {{ $root.Values.partyName | quote  }}
    partyId: {{ $root.Values.partyId | quote  }}
    owner: kubefate
    cluster: fate
  name: {{ .egg }}
spec:
  ports:
    - name: "7888"
      port: 7888
      targetPort: 7888
      protocol: TCP
    - name: "7778"
      port: 7778
      targetPort: 7778
      protocol: TCP
  type: {{ $root.Values.modules.egg.type }}
  selector:
    fateMoudle: {{ .egg | quote  }}
    name: {{ $root.Values.partyName | quote  }}
    partyId: {{ $root.Values.partyId | quote  }}
---
{{- end }}
{{ end }}